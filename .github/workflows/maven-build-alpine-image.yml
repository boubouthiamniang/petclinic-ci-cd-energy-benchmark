name: Java CI with Maven on Alpine + Python

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.12-alpine  # Alpine base with Python 3.12
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache bash git curl unzip tar g++ make cmake coreutils go \
            openjdk17  # Install OpenJDK 17 on Alpine
          java -version

      - name: Setup Python virtualenv
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip

      - name: Install Python requirements
        run: |
          . venv/bin/activate
          pip install numpy pandas xgboost==1.7.5

      - name: Checkout eco-ci action code
        run: |
          mkdir -p /home/runner/work/_actions/green-coding-solutions/
          git clone --depth 1 --branch v3 https://github.com/green-coding-solutions/eco-ci-energy-estimation.git \
            /home/runner/work/_actions/green-coding-solutions/eco-ci-energy-estimation/v3

      - name: Start Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: start-measurement

      - name: Preparatory Tasks Measure
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: get-measurement
          label: 'Preparatory Tasks Measure'

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Build with Maven Wrapper
        run: ./mvnw -B compile package -DskipTests

      - name: Get Build Measurement
        id: total-measurement-step
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: get-measurement
          label: 'Build Maven Alpine'

      - name: Show Energy Results
        id: eco
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: display-results
          json-output: true

      - name: Print total data JSON
        run: |
          echo "Total data JSON: ${{ steps.eco.outputs.data-total-json }}"

      - name: Upload total-data.json
        uses: actions/upload-artifact@v4
        with:
          name: eco-ci-total-data
          path: /tmp/eco-ci/total-data.json
