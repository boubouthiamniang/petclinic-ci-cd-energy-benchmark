name: Deploy and Test Minikube Cluster

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-and-test-minikube:
    runs-on: ubuntu-latest
    steps:
      - name: Start Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: start-measurement

      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Minikube and kubectl
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl apt-transport-https conntrack
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          curl -LO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: Start Minikube
        run: |
          sudo minikube start --driver=docker --kubernetes-version=stable
          kubectl cluster-info
          kubectl get nodes

      - name: Verify Minikube cluster
        run: |
          echo "=== Checking cluster ==="
          kubectl cluster-info
          kubectl get nodes -o wide

      - name: Deploy application
        run: kubectl apply -f k8s/

      - name: Wait for Pods to be ready
        run: |
          kubectl wait --for=condition=ready pod -l app=demo-db --timeout=180s
          kubectl wait --for=condition=ready pod -l app=petclinic --timeout=180s

      - name: Port-forward petclinic
        run: kubectl port-forward deploy/petclinic 8080:8080 &

      - name: Wait for port-forward to establish
        run: |
          echo "Waiting for port-forward to establish..."
          sleep 5

      - name: Test petclinic health
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/actuator/health; do sleep 2; done'

      - name: Test demo-db health
        run: kubectl exec deploy/demo-db -- pg_isready || echo "Demo-DB test skipped"

      - name: Show cluster status for debugging
        if: failure()
        run: |
          echo "=== DEBUGGING INFO ==="
          kubectl get all
          kubectl describe pods
          kubectl logs -l app=petclinic --tail=50 || true
          kubectl logs -l app=demo-db --tail=50 || true

      - name: Show Energy Results
        id: eco
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: display-results
          json-output: true

      - name: Print total data JSON
        run: |
          echo "=== ENERGY CONSUMPTION RESULTS ==="
          echo "Total data JSON: ${{ steps.eco.outputs.data-total-json }}"

      - name: Upload total-data.json
        uses: actions/upload-artifact@v4
        with:
          name: eco-ci-total-data-minikube-deploy-and-test
          path: /tmp/eco-ci/total-data.json
          retention-days: 30
          continue-on-error: true

      - name: Cleanup Minikube
        if: always()
        run: |
          minikube delete || true
