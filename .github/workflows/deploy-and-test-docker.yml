name: Deploy Docker Containers
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy-docker:
    runs-on: ubuntu-latest
    services:
      demo-db:
        image: postgres:15
        env:
          POSTGRES_USER: demo
          POSTGRES_PASSWORD: demo
          POSTGRES_DB: demo
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U demo"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Start Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v3
        with:
          task: start-measurement

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Demo-DB to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U demo; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for Demo-DB... (attempt $i/30)"
            sleep 5
          done

      - name: Build Docker image for Petclinic
        run: |
          echo "Building Petclinic Docker image with production Dockerfile..."
          docker build -t petclinic:latest .
          echo "Docker image built successfully"
          
          # Verify the image was created

      - name: Deploy Petclinic container
        run: |
          echo "Deploying Petclinic container..."
          
          # Remove any existing container
          docker rm -f petclinic 2>/dev/null || true
          
          # Deploy with production configuration
          docker run -d --name petclinic -p 8080:8080 \
            --network host \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/demo \
            -e SPRING_DATASOURCE_USERNAME=demo \
            -e SPRING_DATASOURCE_PASSWORD=demo \
            -e SPRING_PROFILES_ACTIVE=postgres \
            -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
            -e SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect \
            -e JAVA_OPTS="-Xms256m -Xmx512m -Djava.security.egd=file:/dev/./urandom" \
            -e LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=DEBUG \
            -e MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info \
            petclinic:latest
          
          echo "Container started. Checking initial status..."
          sleep 5
          
          # Verify container is running
          if docker ps --filter name=petclinic --filter status=running | grep -q petclinic; then
            echo "✅ Petclinic container is running successfully"
            docker ps --filter name=petclinic --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          else
            echo "❌ Container failed to start properly"
            echo "Container status:"
            docker ps -a --filter name=petclinic
            echo "Container logs:"
            docker logs petclinic
            exit 1
          fi