name: Java CI with Gradle (Alpine)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: alpine:latest

    strategy:
      matrix:
        java: [ '17' ]
        distribution: [ 'temurin' ]

    steps:
      - name: Install system dependencies
        run: |
          apk update
          apk add --no-cache wget unzip git curl bash gcompat libc6-compat python3 py3-pip openjdk17

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout eco-ci repo
        run: git clone https://github.com/green-coding-solutions/eco-ci-energy-estimation.git /tmp/eco-ci

      - name: Start Measurement
        run: bash /tmp/eco-ci/scripts/start-measurement.sh

      - name: Setup Gradle
        run: |
          GRADLE_VERSION=8.4
          wget https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip -P /tmp
          unzip -d /opt/gradle /tmp/gradle-$GRADLE_VERSION-bin.zip
          echo "PATH=/opt/gradle/gradle-$GRADLE_VERSION/bin:$PATH" >> $GITHUB_ENV
          gradle -v

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --exclude-task test

      - name: Get Measurement
        run: bash /tmp/eco-ci/scripts/get-measurement.sh --label "Build gradle alpine"

      - name: Display Results
        run: bash /tmp/eco-ci/scripts/display-results.sh --json-output > /tmp/eco-ci/total-data.json

      - name: Upload total-data.json
        uses: actions/upload-artifact@v4
        with:
          name: eco-ci-total-data-gradle-${{ matrix.java }}-${{ matrix.distribution }}
          path: /tmp/eco-ci/total-data.json
          retention-days: 30
